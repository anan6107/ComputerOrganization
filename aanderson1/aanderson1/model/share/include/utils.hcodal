/**
 * Codasip Ltd
 *
 * CONFIDENTIAL
 *
 * Copyright 2016 Codasip Ltd
 *
 * All Rights Reserved.
 *
 * NOTICE: All information contained in this file, is and shall remain the property of Codasip Ltd
 * and its suppliers, if any.
 *
 * The intellectual and technical concepts contained herein are confidential and proprietary to
 * Codasip Ltd and are protected by trade secret and copyright law.  In addition, elements of the
 * technical concepts may be patent pending.
 *
 * This file is part of the Codasip Studio product. No part of the Studio product, including this
 * file, may be use, copied, modified, or distributed except in accordance with the terms contained
 * in Codasip license agreement under which you obtained this file.
 */

/* -------------------------------------------------------------------------------------------------
 *
 *                                 Codasip uRISC - utilities
 *
 * -------------------------------------------------------------------------------------------------
 */

#ifndef UTILS_HCODAL
#define UTILS_HCODAL

#include "config.hcodal"

// General purpose register macro
#define DEF_GPR(index) \
    element gpr_##index \
    {\
        assembler { STRINGIZE(r##index)}; \
        binary { index:bit[RF_GPR_W] }; \
        return { index }; \
    };

// Opcode elements macro
#define DEF_OPC(name, syntax, opc) \
    element opc_##name \
    {\
        assembler { syntax }; \
        binary { opc }; \
        return { opc }; \
    };

// Used for computation of remaining bits in instructions
#define REMAINING_BITS(bw) UNUSED:bit[INSTR_W - (bw)]

#endif // UTILS_HCODAL
