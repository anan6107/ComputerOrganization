/**
 * Codasip Ltd
 *
 * CONFIDENTIAL
 *
 * Copyright 2016 Codasip Ltd
 *
 * All Rights Reserved.
 *
 * NOTICE: All information contained in this file, is and shall remain the property of Codasip Ltd
 * and its suppliers, if any.
 *
 * The intellectual and technical concepts contained herein are confidential and proprietary to
 * Codasip Ltd and are protected by trade secret and copyright law.  In addition, elements of the
 * technical concepts may be patent pending.
 *
 * This file is part of the Codasip Studio product. No part of the Studio product, including this
 * file, may be use, copied, modified, or distributed except in accordance with the terms contained
 * in Codasip license agreement under which you obtained this file.
 */

/* -------------------------------------------------------------------------------------------------
 *
 *                                  Codasip uRISC - interfaces
 *
 * -------------------------------------------------------------------------------------------------
 */

#include "config.hcodal"

// -------------------------------------------------------------------------------------------------
// Interface to code memory
// -------------------------------------------------------------------------------------------------

interface if_fetch
{
    // The bits specifier has 3 values:
    // - address bus bitwidth
    // - word bitwidth
    // - byte size (byte size is equal to the smallest addressable by
    bits = { ADDR_W, WORD_W, LAU_W };

    // The type says what interface this is. For simplicity it is enough now
    // to specify only MEMORY:MASTER here. The MEMORY:MASTER says that this interface
    // is a memory-like interface and the processor core behaves as a master on the bus.
    type = MEMORY:MASTER;

    // Read-only interface
    flag = R;

    // Setting endianness of interface
    endianness = ENDIAN;
};

// -------------------------------------------------------------------------------------------------
// Interface to data memory
// -------------------------------------------------------------------------------------------------

interface if_ldst
{
    bits = { ADDR_W, WORD_W, LAU_W };
    type = MEMORY:MASTER;
    flag = RW;
    endianness = ENDIAN;
};
